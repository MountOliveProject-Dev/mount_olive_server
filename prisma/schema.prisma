
generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

}
enum NotificationType {
  MEDIA
  EVENT
}
enum MediaType {
  VIDEO
  AUDIO
}

model Media {
  id       Int     @id @default(autoincrement())
  uniqueId String @unique @default(cuid())
  title    String
  description String
  coverPhoto String
  source String
  host String
  duration BigInt
  type MediaType
  category String
  createdAt  String
  updatedAt     String

  // Relation
  eventNotifications engagementsManager? 
}
model Event {
  id       Int     @id @default(autoincrement())
  uniqueId String @unique @default(cuid())
  title    String
  createdAt     String
  updatedAt     String 
  date String
  time String
  location String
  venue String
  host String
  description String
  thumbnail String

  //
  eventNotifications engagementsManager?
}

model Notification {
  id       Int     @id @default(autoincrement())
  title    String
  description String
  createdAt   String
  updatedAt   String
  read Boolean

  //
  notificationEngagements engagementsManager?
}

model engagementsManager {
  id       Int     @id @default(autoincrement())
  type          NotificationType
  eventId       String? @unique
  mediaId       String? @unique
  specialKey    String @unique
  notificationId Int @unique
  notification  Notification  @relation(fields: [notificationId], references: [id])
  event         Event?        @relation(fields: [eventId], references: [uniqueId])
  media         Media?        @relation(fields: [mediaId], references: [uniqueId])
}
model MediaStorageToken {
  id          Int      @id @default(autoincrement())
  accessToken String
  refreshToken String
  scope       String
  tokenType   String
  expiryDate  Int
}


